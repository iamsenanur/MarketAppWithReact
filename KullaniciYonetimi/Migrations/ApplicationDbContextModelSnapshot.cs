// <auto-generated />
using System;
using KullaniciYonetimi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KullaniciYonetimi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KullaniciYonetimi.Models.IslemTipiListesi", b =>
                {
                    b.Property<int>("IslemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IslemID"));

                    b.Property<string>("IslemTipi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IslemID");

                    b.ToTable("IslemTipiListesi");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.IslemlerListesi", b =>
                {
                    b.Property<int>("IslemlerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IslemlerID"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<DateTime>("IslemTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("IslemTipiID")
                        .HasColumnType("int");

                    b.Property<int>("UrunID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IslemlerID");

                    b.HasIndex("IslemTipiID");

                    b.HasIndex("UrunID");

                    b.HasIndex("UserID");

                    b.ToTable("IslemlerListesi");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.KategoriListesi", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategoriID"));

                    b.Property<string>("KategoriAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("KategoriID");

                    b.ToTable("KategoriListesi");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SepetIslemleri", b =>
                {
                    b.Property<int>("SepetIslemleriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SepetIslemleriID"));

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<int>("SepetID")
                        .HasColumnType("int");

                    b.Property<int>("UrunBarkod")
                        .HasColumnType("int");

                    b.Property<int>("UrunFiyatID")
                        .HasColumnType("int");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SepetIslemleriID");

                    b.HasIndex("SepetID");

                    b.HasIndex("UrunBarkod");

                    b.HasIndex("UrunFiyatID");

                    b.HasIndex("UserID");

                    b.ToTable("SepetIslemleri");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SepetListesi", b =>
                {
                    b.Property<int>("SepetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SepetID"));

                    b.Property<DateTime>("SepetTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SepetTutari")
                        .HasColumnType("int");

                    b.HasKey("SepetID");

                    b.ToTable("SepetListesi");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SiparisListesi", b =>
                {
                    b.Property<int>("SiparisID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisID"));

                    b.Property<int>("SepetID")
                        .HasColumnType("int");

                    b.Property<decimal>("SiparisFiyatiTutar")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("SiparisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SiparisID");

                    b.HasIndex("SepetID");

                    b.HasIndex("UserID");

                    b.ToTable("SiparisListesi");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SiparisOdemeDurumListesi", b =>
                {
                    b.Property<int>("SiparisOdemeDurumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisOdemeDurumID"));

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisOdemeDurumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiparisOdemeDurumu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SiparisOdemeDurumID");

                    b.HasIndex("SiparisID");

                    b.HasIndex("UserID");

                    b.ToTable("SiparisOdemeDurumListesi");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SiparisTeslimatDurumListesi", b =>
                {
                    b.Property<int>("SiparisTeslimatDurumID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SiparisTeslimatDurumID"));

                    b.Property<int>("SiparisID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SiparisTeslimatDurumTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("SiparisTeslimatDurumu")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SiparisTeslimatDurumID");

                    b.HasIndex("SiparisID");

                    b.HasIndex("UserID");

                    b.ToTable("SiparisTeslimatDurumListesi");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.UrunFyatListesi", b =>
                {
                    b.Property<int>("UrunFiyatID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunFiyatID"));

                    b.Property<int>("UrunBarkod")
                        .HasColumnType("int");

                    b.Property<DateTime>("UrunFiyatTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UrunFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("UrunFiyatID");

                    b.HasIndex("UrunBarkod");

                    b.ToTable("UrunFiyatListesi");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.UrunListesi", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UrunID"));

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UrunBarkod")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("UrunKategoriID")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("UrunID");

                    b.HasIndex("UrunKategoriID");

                    b.ToTable("UrunListesi");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.IslemlerListesi", b =>
                {
                    b.HasOne("KullaniciYonetimi.Models.IslemTipiListesi", "IslemTipi")
                        .WithMany("Islemler")
                        .HasForeignKey("IslemTipiID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KullaniciYonetimi.Models.UrunListesi", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("IslemTipi");

                    b.Navigation("Urun");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SepetIslemleri", b =>
                {
                    b.HasOne("KullaniciYonetimi.Models.SepetListesi", "Sepet")
                        .WithMany("sepetIslemleri")
                        .HasForeignKey("SepetID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KullaniciYonetimi.Models.UrunListesi", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunBarkod")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("KullaniciYonetimi.Models.UrunFyatListesi", "Fiyat")
                        .WithMany()
                        .HasForeignKey("UrunFiyatID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Fiyat");

                    b.Navigation("Sepet");

                    b.Navigation("Urun");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SiparisListesi", b =>
                {
                    b.HasOne("KullaniciYonetimi.Models.SepetListesi", "Sepet")
                        .WithMany()
                        .HasForeignKey("SepetID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sepet");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SiparisOdemeDurumListesi", b =>
                {
                    b.HasOne("KullaniciYonetimi.Models.SiparisListesi", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SiparisTeslimatDurumListesi", b =>
                {
                    b.HasOne("KullaniciYonetimi.Models.SiparisListesi", "Siparis")
                        .WithMany()
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Siparis");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.UrunFyatListesi", b =>
                {
                    b.HasOne("KullaniciYonetimi.Models.UrunListesi", "Urun")
                        .WithMany()
                        .HasForeignKey("UrunBarkod")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Urun");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.UrunListesi", b =>
                {
                    b.HasOne("KullaniciYonetimi.Models.KategoriListesi", "Kategori")
                        .WithMany("Urunler")
                        .HasForeignKey("UrunKategoriID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.IslemTipiListesi", b =>
                {
                    b.Navigation("Islemler");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.KategoriListesi", b =>
                {
                    b.Navigation("Urunler");
                });

            modelBuilder.Entity("KullaniciYonetimi.Models.SepetListesi", b =>
                {
                    b.Navigation("sepetIslemleri");
                });
#pragma warning restore 612, 618
        }
    }
}
